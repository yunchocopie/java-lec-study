#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (malloc) failed to allocate 817088 bytes for AllocateHeap
# Possible reasons:
#   The system is out of physical RAM or swap space
#   The process is running with CompressedOops enabled, and the Java Heap may be blocking the growth of the native heap
# Possible solutions:
#   Reduce memory load on the system
#   Increase physical memory or swap space
#   Check if swap backing store is full
#   Decrease Java heap size (-Xmx/-Xms)
#   Decrease number of Java threads
#   Decrease Java thread stack sizes (-Xss)
#   Set larger code cache with -XX:ReservedCodeCacheSize=
#   JVM is running with Zero Based Compressed Oops mode in which the Java heap is
#     placed in the first 32GB address space. The Java Heap base address is the
#     maximum limit for the native heap growth. Please use -XX:HeapBaseMinAddress
#     to set the Java Heap base and to place the Java Heap above 32GB virtual address.
# This output file may be truncated or incomplete.
#
#  Out of Memory Error (allocation.cpp:44), pid=332316, tid=366444
#
# JRE version: OpenJDK Runtime Environment (21.0.1+12) (build 21.0.1+12-29)
# Java VM: OpenJDK 64-Bit Server VM (21.0.1+12-29, mixed mode, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, windows-amd64)
# No core dump will be written. Minidumps are not enabled by default on client versions of Windows
#

---------------  S U M M A R Y ------------

Command Line: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2023.3\lib\idea_rt.jar=51919:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2023.3\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8 ex17.multiway.Client

Host: 12th Gen Intel(R) Core(TM) i7-12700F, 20 cores, 15G,  Windows 10 , 64 bit Build 19041 (10.0.19041.3636)
Time: Wed Jan 10 13:19:26 2024  Windows 10 , 64 bit Build 19041 (10.0.19041.3636) elapsed time: 77.874718 seconds (0d 0h 1m 17s)

---------------  T H R E A D  ---------------

Current thread (0x000001a0ca7bef10):  JavaThread "main"             [_thread_in_vm, id=366444, stack(0x0000006abb400000,0x0000006abb500000) (1024K)]

Stack: [0x0000006abb400000,0x0000006abb500000]
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
V  [jvm.dll+0x6c9029]
V  [jvm.dll+0x854b81]
V  [jvm.dll+0x856e5e]
V  [jvm.dll+0x857543]
V  [jvm.dll+0x280c06]
V  [jvm.dll+0xbea87]
V  [jvm.dll+0x800872]
V  [jvm.dll+0x800bc6]
V  [jvm.dll+0x8057df]
V  [jvm.dll+0x3ee109]
V  [jvm.dll+0x486ba9]
C  0x000001a0dcadab86

The last pc belongs to native nmethod (printed below).
Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)
J 355  java.lang.Thread.start0()V java.base@21.0.1 (0 bytes) @ 0x000001a0dcadaaf3 [0x000001a0dcadaaa0+0x0000000000000053]
J 1048 c2 java.lang.Thread.start()V java.base@21.0.1 (37 bytes) @ 0x000001a0dcb2d208 [0x000001a0dcb2d140+0x00000000000000c8]
j  ex17.multiway.Client.main([Ljava/lang/String;)V+76
v  ~StubRoutines::call_stub 0x000001a0dc37100d
